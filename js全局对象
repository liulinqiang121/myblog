最近在看web开发者网站https://developer.mozilla.org，今天看的是js的全局对象和属性，好记性不如烂笔头，还是记下来比较好。
一. 值属性

Infinity ：全局属性 Infinity 是一个数值，表示无穷大。
NaN: 代表一个不是数字的值，NaN不等于自己，可以用Number.isNaN()函数去判断
undefined: 是全局对象的一个属性。也就是说，它是全局作用域的一个变量。undefined的最初值就是原始数据类型undefined,可以使用viod 来返回undefined，因为undefined不是保留字，有可能被定义为局部变量，从而获取不到真正的undefined
null： 表示未指向一个对象，null == null

二. 函数属性

eval()：执行括号里面的表达式，如果是一个求值表达式就会执行，如果是多个执行语句都会执行，并且返回最后一个执行语句。函数作为字符串使用时，要加上'('和‘)’来使用。但是尽量避免使用，在严格模式中不能使用，不安全，可以一个字符串改变了不需要改变的变量。
isFinity(): 检查数字的有穷性，Math.isFinite()更健壮
parseFloat(): 将数字转换为浮点数，如果不能转换为数字返回NaN
parseInt(): 将数字转换为整数，第二个参数代表进制，2-64位数，除此之外将被省略
decodeUrl() 和 encodeUrl():将已编码 URI 中所有能识别的转义序列转换成原字符和将url转义，其中有些字符例外，如：‘#’，‘+’等
encodeURIComponent和decodeURIComponent: 更完全的方法，更完整，四个转义序列对应一个字符。
escape()和unescape：十六进制转义序列的转换，已被废弃

三. 基本对象
1 Object对象
Object.length = 1;有length属性值为1
Object.prototype：为所有Object类型添加原型属性
Object.assignee()：通过一个或者多个对象来复制属性，后面的属性会覆盖前面的属性，如果为基本类型会转换为对象，不为拷贝继承属性和不可枚举属性，浅拷贝，会拷贝访问器。
Object.create(): 创建一个对象，原型prototype指向第一个参数，第二个设置一个自带属性，相当于Object.defineProperty()
Object.defineProperties():设置一个对象的属性，value,configurable,writable,enumble,get，set属性
Object.entries(): 获取对象的[key,value]数组
Object.freeze(): 冻结对象，不能对象修改和删除属性
Object.getOwnPropertyDescriptor(obj, prop): 获取对象的属性，也就是value,configurable,writable,enumble四个属性
Object.getOwnPropertyNames()方法返回一个由指定对象的所有自身属性的属性名（包括不可枚举属性但不包括Symbol值作为名称的属性）组成的数组。
Object.getOwnPropertySymbols() 方法返回一个给定对象自身的所有 Symbol 属性的数组。
Object.getPrototypeOf() 方法返回指定对象的原型
Object.is(): 判断两个值是否相等
Object.isExtensible() 方法判断一个对象是否是可扩展的（是否可以在它上面添加新的属性）。如果不是一个对象类型会报错
Object.isFrozen() 方法判断一个对象是否被冻结，即不可修改属性和删除属性
Object.isSealed() 方法判断一个对象是否被密封。
Object.values()方法返回一个给定对象自身的所有可枚举属性值的数组
Object.keys()方法返回一个给定对象自身的所有键名称的数组
Object.setPrototypeOf() **方法设置一个指定的对象的原型 ( 即, 内部[[Prototype]]属性）到另一个对象或 null上
Object原型对象上有 toString()，hasOwnproperty()，valueOf()，isPrototypeOf()，propertyIsEnumerable()等方法

2 Function
Function.name 获取方法名
Function.length 获取参数的个数
apply() 方法调用一个具有给定this值的函数，以及作为一个数组（或类似数组对象）提供的参数，在一个对象的上下文中应用
另一个对象的方法；参数能够以数组形式传入
bind()方法创建一个新的函数，在调用时设置this关键字为提供的值。并在调用新函数时，将给定参数列表作为原函数的参数序
列的前若干项
toString()方法，转换为字符串,
call(): 方法调用一个具有给定this值的函数，以及多个参数，在一个对象的上下文中应用
另一个对象的方法；参数能够以单个形式传入，如果第一个参数为空，即this指向全局

3 Error
本身没有方法属性，从原型链上继承了一些属性，
三个参数，msg，file，linenumber，错误信息，文件名，行号

4 Boolean
感觉没什么好写的，原型上有toString(),valueOf()方法

5 InternalError
象表示出现在JavaScript引擎内部的错误。

6 RangeError
对象标明一个错误，当一个值不在其所允许的范围或者集合中。

7 ReferenceError
（引用错误） 对象代表当一个不存在的变量被引用时发生的错误。

8 TypeError（类型错误） 对象用来表示值的类型非预期类型时发生的错误。

9 Number
Number.MAX_SAFE_INTEGER 一个最大安全证书 2的53次方-1
Number.MAX_VALUE 1.79e308
Number.isNaN()：是否是NaN
Number.isInfinite(): 是否有穷
Number.toFixed():保留几位小数
10 Math
Math.abs() :获取绝对值
Math.cell() :向上取整
Math.floor(): 向下取整
Math.min()和Math.max():获取参数中的最大值和最小值
Math.pow(): 返回次幂.
Math.random: 获取0-1之间的随机数

11 Date
   Date.length 为7
   Date.prototype原型链
   Date.now() 返回自1970-01-01以来的毫秒数
   Date.parse() 解析一个日期，返回自1997经历的毫秒数
   Date原型链上的方法
   getDate()返回日期中的第几天
   getDay() 返回星期中的第几天
   getFullYear(),getMounth() getHours() getSeconds() getMunites() 获取年份，月份，小时，秒，分钟
   getTime() 获取1970以来的毫秒数
   setFullYear() setDate() setSeconds() setMinutes() setMonth() setTime()  toJson() 一些设置年月日时分秒的方法以及转化为json的方法

12 RegExp
     正则对象，下次正则里单独写吧

  13 Array
      方法：
      from(): 创建一个新数组，
      isArray(): 判断一个是否是数组
      of(): 根据参数创建数组
      后面单独写，还有es6的东西太多了
